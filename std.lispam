


(def not? (lambda (x) (if x false true)))
(def less? (lambda (x y) (< x y)))
(def greater? (lambda (x y) (less? y x)))
(def equal? (lambda (x y) (= x y)))
(def not-equal? (lambda (x y) (not (equal? x y))))

(def add (lambda (x y) (if x y false)))
(def or  (lambda (x y) (if x true y)))

(def negative (lambda (x) (- 0 x)))
(def abs (lambda (x) (if (greater? x 0) x (negative x))))



(def fib (lambda (x) (if (greater? x 0) (+ (fib (- x 1)) (fib (- x 2))) (1))))

(def fib1 (lambda (x) (
  (def fib (lambda (a b x) (if (greater? x 0) (fib b (+ a b) (- x 1)) (b))))
  (fib 1 1 x))))



